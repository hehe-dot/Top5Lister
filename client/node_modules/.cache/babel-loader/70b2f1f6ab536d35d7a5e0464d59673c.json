{"ast":null,"code":"var _jsxFileName = \"/Users/jiayi/Desktop/CSE 316/Top5Lists_HW5/client/src/components/DeleteModal.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Stack from '@mui/material/Stack';\n/*\n    This modal is shown when the user asks to delete a list. Note \n    that before this is shown a list has to be marked for deletion,\n    which means its id has to be known so that we can retrieve its\n    information and display its name in this modal. If the user presses\n    confirm, it will be deleted.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeleteModal(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  var open = false;\n  let name = \"\";\n\n  if (store.currentList) {\n    name = store.currentList.name;\n  }\n\n  function handleDeleteList(event) {\n    store.deleteMarkedList();\n  }\n\n  function handleCloseModal(event) {\n    open = false;\n    store.unmarkListForDeletion();\n  }\n\n  if (store.listMarkedForDeletion) {\n    name = store.listMarkedForDeletion.name;\n    open = true;\n  }\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      \"data-animation\": \"slideInOutLeft\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            sx: {\n              width: '100%'\n            },\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              children: /*#__PURE__*/_jsxDEV(AlertTitle, {\n                children: [\" Delete the \", name, \" Top 5 List?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"confirm-cancel-container\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleDeleteList,\n                children: \"Confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleCloseModal,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeleteModal, \"73C7T2gc7osE0gOE4ApLm9/B7dk=\");\n\n_c = DeleteModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"sources":["/Users/jiayi/Desktop/CSE 316/Top5Lists_HW5/client/src/components/DeleteModal.js"],"names":["useContext","useState","GlobalStoreContext","React","Box","Button","Typography","Modal","Alert","AlertTitle","Stack","DeleteModal","props","store","open","name","currentList","handleDeleteList","event","deleteMarkedList","handleCloseModal","unmarkListForDeletion","listMarkedForDeletion","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","mt"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Stack from '@mui/material/Stack';\n\n/*\n    This modal is shown when the user asks to delete a list. Note \n    that before this is shown a list has to be marked for deletion,\n    which means its id has to be known so that we can retrieve its\n    information and display its name in this modal. If the user presses\n    confirm, it will be deleted.\n    \n    @author McKilla Gorilla\n*/\n\nexport default function DeleteModal(props) {\n    const { store } = useContext(GlobalStoreContext);\n    var open = false\n    let name = \"\";\n    if (store.currentList) {\n        name = store.currentList.name;\n    }\n    function handleDeleteList(event) {\n        store.deleteMarkedList();\n    }\n    function handleCloseModal(event) {\n        open = false\n        store.unmarkListForDeletion();\n    }\n\n    if (store.listMarkedForDeletion){\n        name = store.listMarkedForDeletion.name\n        open = true\n    }\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n                data-animation=\"slideInOutLeft\"\n            >\n                <Box sx={style}>\n                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                <Stack sx={{ width: '100%' }} spacing={2}>\n                <Alert severity=\"info\">\n                <AlertTitle> Delete the {name} Top 5 List?</AlertTitle>\n                </Alert>\n                <div id=\"confirm-cancel-container\">\n                    <Button onClick={handleDeleteList}>Confirm</Button>\n                    <Button onClick={handleCloseModal}>Cancel</Button>\n                </div>\n                </Stack>\n                </Typography>\n                </Box>\n            </Modal>\n            </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}