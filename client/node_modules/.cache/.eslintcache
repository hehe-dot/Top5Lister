[{"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/index.js":"1","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/reportWebVitals.js":"2","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/App.js":"3","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/auth/index.js":"4","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/index.js":"5","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/store/index.js":"6","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/AppBanner.js":"7","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/RegisterScreen.js":"8","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/HomeScreen.js":"9","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/HomeWrapper.js":"10","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/EditToolbar.js":"11","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/SplashScreen.js":"12","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/Statusbar.js":"13","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/Top5Item.js":"14","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/WorkspaceScreen.js":"15","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/LoginScreen.js":"16","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/ListCard.js":"17","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/common/jsTPS.js":"18","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/transactions/MoveItem_Transaction.js":"19","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/transactions/UpdateItem_Transaction.js":"20","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/api/index.js":"21","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/Copyright.js":"22","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/DeleteModal.js":"23"},{"size":928,"mtime":1635283548000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1635283548000,"results":"26","hashOfConfig":"25"},{"size":1285,"mtime":1638126229304,"results":"27","hashOfConfig":"25"},{"size":3819,"mtime":1636224786000,"results":"28","hashOfConfig":"25"},{"size":763,"mtime":1636086426000,"results":"29","hashOfConfig":"25"},{"size":16985,"mtime":1638126719735,"results":"30","hashOfConfig":"25"},{"size":4247,"mtime":1635954773000,"results":"31","hashOfConfig":"25"},{"size":7473,"mtime":1638125195626,"results":"32","hashOfConfig":"25"},{"size":1749,"mtime":1638126575602,"results":"33","hashOfConfig":"25"},{"size":400,"mtime":1635283548000,"results":"34","hashOfConfig":"25"},{"size":1842,"mtime":1636140845000,"results":"35","hashOfConfig":"25"},{"size":762,"mtime":1638124698495,"results":"36","hashOfConfig":"25"},{"size":2995,"mtime":1638144792627,"results":"37","hashOfConfig":"25"},{"size":4425,"mtime":1636066088000,"results":"38","hashOfConfig":"25"},{"size":1691,"mtime":1635283548000,"results":"39","hashOfConfig":"25"},{"size":4968,"mtime":1636392227000,"results":"40","hashOfConfig":"25"},{"size":3444,"mtime":1635283548000,"results":"41","hashOfConfig":"25"},{"size":6473,"mtime":1635283548000,"results":"42","hashOfConfig":"25"},{"size":703,"mtime":1635283548000,"results":"43","hashOfConfig":"25"},{"size":726,"mtime":1635283548000,"results":"44","hashOfConfig":"25"},{"size":1866,"mtime":1635903227000,"results":"45","hashOfConfig":"25"},{"size":452,"mtime":1635283548000,"results":"46","hashOfConfig":"25"},{"size":2451,"mtime":1636138916000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"14mt2b6",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/index.js",[],["99","100"],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/reportWebVitals.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/App.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/auth/index.js",["101"],"import React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport api from '../api'\n\nconst AuthContext = createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    REGISTER_USER: \"REGISTER_USER\",\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\"\n}\n\nfunction AuthContextProvider(props) {\n    const [auth, setAuth] = useState({\n        user: null,\n        loggedIn: false\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn\n                });\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true\n                })\n            }\n            case AuthActionType.LOGIN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true\n                })\n            }\n            case AuthActionType.LOGOUT: {\n                return setAuth({\n                    user: null,\n                    loggedIn: false\n                })\n            }\n            default:\n                return auth;\n        }\n    }\n\n    auth.getLoggedIn = async function () {\n        try{\n            const response = await api.getLoggedIn();\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.GET_LOGGED_IN,\n                    payload: {\n                        loggedIn: response.data.loggedIn,\n                        user: response.data.user\n                    }\n                });\n            }\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    auth.registerUser = async function(userData, store) {\n        try{\n            const response = await api.registerUser(userData);      \n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.REGISTER_USER,\n                    payload: {\n                        user: response.data.user\n                    }\n                })\n                history.push(\"/\");\n                store.loadIdNamePairs();\n            }\n        }catch (e){\n            return Promise.reject(new Error (e.response.data.errorMessage))\n        }\n    }\n\n    auth.login = async function(userData){\n        try{\n            const response = await api.loginUser(userData);\n            if (response.status === 200){\n                console.log('auth success');\n                authReducer({\n                    type: AuthActionType.LOGIN,\n                    payload: {\n                        user: response.data.user\n                    }\n                })\n                history.push(\"/\");\n            }\n        }catch (e){\n            return Promise.reject(new Error (e.response.data.errorMessage))\n        }\n    }\n\n    auth.logoutUser = async function(){\n        const response = await api.logoutUser();\n        if (response.status === 200){\n            console.log('auth success');\n            authReducer({\n                type: AuthActionType.LOGOUT,\n                payload: {\n                    user: null\n                }\n            })\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/index.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/store/index.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/AppBanner.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/RegisterScreen.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/HomeScreen.js",["102"],"import React, { useContext, useEffect } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport ListCard from './ListCard.js'\nimport { Fab, Typography } from '@mui/material'\nimport AddIcon from '@mui/icons-material/Add';\nimport List from '@mui/material/List';\nimport DeleteModal from './DeleteModal';\nimport Statusbar from './Statusbar';\n\n/*\n    This React component lists all the top5 lists in the UI.\n    \n    @author McKilla Gorilla\n*/\nconst HomeScreen = () => {\n    const { store } = useContext(GlobalStoreContext);\n\n    useEffect(() => {\n        store.loadIdNamePairs();\n    }, []);\n\n    function handleCreateNewList() {\n        store.createNewList();\n    }\n    let listCard = \"\";\n    if (store) {\n        listCard = \n            <List sx={{ width: '90%', left: '5%', bgcolor: 'background.paper' }}>\n            {\n                store.idNamePairs.map((pair) => (\n                    <ListCard\n                        key={pair._id}\n                        idNamePair={pair}\n                        selected={false}\n                    />\n                ))\n            }\n            </List>;\n    }\n    return (\n        <div id=\"top5-list-selector\">\n            <div id=\"list-selector-heading\">\n            <Fab \n                color=\"primary\" \n                aria-label=\"add\"\n                id=\"add-list-button\"\n                onClick={handleCreateNewList}\n            >\n                <AddIcon />\n            </Fab>\n                <Typography variant=\"h2\">Your Lists</Typography>\n            </div>\n            <div id=\"list-selector-list\">\n                {\n                    listCard\n                }\n                <DeleteModal/>\n            </div>\n            <Statusbar/>\n        </div>)\n}\n\nexport default HomeScreen;","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/HomeWrapper.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/EditToolbar.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/SplashScreen.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/Statusbar.js",["103","104","105","106"],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/Top5Item.js",["107"],"import { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store'\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\nfunction Top5Item(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [editActive, setEditActive] = useState(false);\n    const [draggedTo, setDraggedTo] = useState(0);\n    const [text, setText] = useState(\"\");\n\n    function handleDragStart(event, targetId) {\n        event.dataTransfer.setData(\"item\", targetId);\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n\n    function handleDragEnter(event) {\n        event.preventDefault();\n        console.log(\"entering\");\n        setDraggedTo(true);\n    }\n\n    function handleDragLeave(event) {\n        event.preventDefault();\n        console.log(\"leaving\");\n        setDraggedTo(false);\n    }\n\n    function handleToggleEdit(event) {\n        event.stopPropagation();\n        toggleEdit();\n    }\n\n    function toggleEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsItemEditActive();\n        }\n        setEditActive(newActive);\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            let index = event.target.id.substring(\"list-\".length);\n            let text = event.target.value;\n            store.addUpdateItemTransaction(index-1, text);\n            toggleEdit();\n        }\n    }\n\n    function handleUpdateText(event) {\n        setText(event.target.value);\n    }\n\n    function handleDrop(event, targetId) {\n        event.preventDefault();\n        let sourceId = event.dataTransfer.getData(\"item\");\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n        setDraggedTo(false);\n\n        console.log(\"handleDrop (sourceId, targetId): ( \" + sourceId + \", \" + targetId + \")\");\n\n        // UPDATE THE LIST\n        store.addMoveItemTransaction(sourceId, targetId);\n    }\n\n    let editStatus = false;\n    if (store.isItemEditActive) {\n        editStatus = true;\n    }\n\n    let { index } = props;\n\n    let itemClass = \"top5-item\";\n    if (draggedTo) {\n        itemClass = \"top5-item-dragged-to\";\n    }\n\n    if (editActive) {\n        return (\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id={\"item-\" + (index+1)}\n                label=\"Top 5 List Item Name\"\n                name=\"name\"\n                autoComplete=\"Top 5 List Item Name\"\n                className='top5-item'\n                type='text'\n                onKeyPress={handleKeyPress}\n                onChange={handleUpdateText}\n                defaultValue={props.text}\n                inputProps={{style: {fontSize: 48}}}\n                InputLabelProps={{style: {fontSize: 24}}}\n                autoFocus\n            />)\n    }\n\n    return (\n            <ListItem\n                id={'item-' + (index+1)}\n                key={props.key}\n                className={itemClass}\n                onDragStart={(event) => {\n                    handleDragStart(event, (index+1))\n                }}\n                onDragOver={(event) => {\n                    handleDragOver(event, (index+1))\n                }}\n                onDragEnter={(event) => {\n                    handleDragEnter(event, (index+1))\n                }}\n                onDragLeave={(event) => {\n                    handleDragLeave(event, (index+1))\n                }}\n                onDrop={(event) => {\n                    handleDrop(event, (index+1))\n                }}\n                draggable=\"true\"\n                sx={{ display: 'flex', p: 1 }}\n                style={{\n                    fontSize: '48pt',\n                    width: '100%'\n                }}\n            >\n            <Box sx={{ p: 1 }}>\n                <IconButton disabled = {editStatus} onClick = {handleToggleEdit} aria-label='edit'>\n                    <EditIcon style={{fontSize:'48pt'}}  />\n                </IconButton>\n            </Box>\n                <Box sx={{ p: 1, flexGrow: 1 }}>{props.text}</Box>\n            </ListItem>\n    )\n}\n\nexport default Top5Item;","/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/WorkspaceScreen.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/LoginScreen.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/ListCard.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/common/jsTPS.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/transactions/MoveItem_Transaction.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/transactions/UpdateItem_Transaction.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/api/index.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/Copyright.js",[],"/Users/jiayi/Desktop/CSE 316/Top5Lists_Final/client/src/components/DeleteModal.js",["108"],"import { useContext, useState } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Stack from '@mui/material/Stack';\n\n/*\n    This modal is shown when the user asks to delete a list. Note \n    that before this is shown a list has to be marked for deletion,\n    which means its id has to be known so that we can retrieve its\n    information and display its name in this modal. If the user presses\n    confirm, it will be deleted.\n    \n    @author McKilla Gorilla\n*/\n\nexport default function DeleteModal(props) {\n    const { store } = useContext(GlobalStoreContext);\n    var open = false\n    let name = \"\";\n    if (store.currentList) {\n        name = store.currentList.name;\n    }\n    function handleDeleteList(event) {\n        store.deleteMarkedList();\n    }\n    function handleCloseModal(event) {\n        open = false\n        store.unmarkListForDeletion();\n    }\n\n    if (store.listMarkedForDeletion){\n        name = store.listMarkedForDeletion.name\n        open = true\n    }\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n                data-animation=\"slideInOutLeft\"\n            >\n                <Box sx={style}>\n                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                <Stack sx={{ width: '100%' }} spacing={2}>\n                <Alert severity=\"info\">\n                <AlertTitle> Delete the {name} Top 5 List?</AlertTitle>\n                </Alert>\n                <div id=\"confirm-cancel-container\">\n                    <Button onClick={handleDeleteList}>Confirm</Button>\n                    <Button onClick={handleCloseModal}>Cancel</Button>\n                </div>\n                </Stack>\n                </Typography>\n                </Box>\n            </Modal>\n            </div>\n    );\n}",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":25,"column":8,"nodeType":"115","endLine":25,"endColumn":10,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":20,"column":8,"nodeType":"115","endLine":20,"endColumn":10,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":18},{"ruleId":"119","severity":1,"message":"123","line":12,"column":24,"nodeType":"121","messageId":"122","endLine":12,"endColumn":43},{"ruleId":"119","severity":1,"message":"124","line":12,"column":45,"nodeType":"121","messageId":"122","endLine":12,"endColumn":54},{"ruleId":"119","severity":1,"message":"125","line":62,"column":13,"nodeType":"121","messageId":"122","endLine":62,"endColumn":18},{"ruleId":"119","severity":1,"message":"126","line":18,"column":12,"nodeType":"121","messageId":"122","endLine":18,"endColumn":16},{"ruleId":"119","severity":1,"message":"127","line":1,"column":22,"nodeType":"121","messageId":"122","endLine":1,"endColumn":30},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["131"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'listItemIconClasses' is defined but never used.","'TextField' is defined but never used.","'store' is assigned a value but never used.","'text' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [auth]",{"range":"136","text":"137"},"Update the dependencies array to be: [store]",{"range":"138","text":"139"},[675,677],"[auth]",[593,595],"[store]"]